generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             String         @id @default(cuid())
  name           String
  password       String
  email          String         @unique
  products       Product[]      @relation("UserProducts")
  carts          Cart[]         @relation("UserCarts")
  payments       Payment[]      
  subscriptions  Subscription[] 
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model Product {
  id          String      @id @default(cuid())
  name        String
  description String?
  price       Float
  imageUrl    String?
  stock       Int         @default(0)
  user        User        @relation("UserProducts", fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  cartItems   CartItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Cart {
  id        String    @id @default(cuid())
  name      String
  notes     String?
  user      User      @relation("UserCarts", fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  items     CartItem[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model CartItem {
  id        String   @id @default(cuid())
  quantity  Int      @default(1)
  price     Float    
  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Payment {
  id               String    @id @default(cuid())
  user             User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId           String
  mercadopagoId    String    @unique
  amount           Float
  currency         String
  status           String
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Subscription {
  id                         String    @id @default(cuid())
  user                       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId                     String
  plan                       String
  trialEnds                  DateTime?
  status                     String
  mercadopagoPreapprovalId   String?   @unique
  createdAt                  DateTime  @default(now())
  updatedAt                  DateTime  @updatedAt
}
